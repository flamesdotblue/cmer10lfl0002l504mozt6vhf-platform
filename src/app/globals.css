@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --bg: #0b0c10;
}

html, body, #__next { height: 100%; }

body {
  @apply bg-base-900 text-white antialiased;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%"><defs><pattern id="grid" width="48" height="48" patternUnits="userSpaceOnUse"><path d="M 48 0 L 0 0 0 48" fill="none" stroke="rgba(255,255,255,0.03)" stroke-width="1"/></pattern></defs><rect width="100%" height="100%" fill="transparent"/><rect width="100%" height="100%" fill="url(%23grid)"/></svg>');
  background-repeat: repeat;
}

/*******************
  Glass + Shimmer
*******************/
.glass {
  background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
  backdrop-filter: saturate(180%) blur(14px);
  -webkit-backdrop-filter: saturate(180%) blur(14px);
  box-shadow: 0 10px 40px rgba(0,0,0,0.35), inset 0 1px 0 rgba(255,255,255,0.05);
  border: 1px solid rgba(255,255,255,0.08);
}

.holo-text {
  background: linear-gradient(92deg, #67d2ff 0%, #a855f7 50%, #67d2ff 100%);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.shine::after {
  content: "";
  position: absolute;
  top: -150%;
  left: -50%;
  width: 60%;
  height: 400%;
  transform: rotate(25deg);
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.15), transparent);
  animation: shine 7s linear infinite;
}

@keyframes shine {
  0% { transform: translateX(-120%) rotate(25deg); }
  100% { transform: translateX(220%) rotate(25deg); }
}

.fade-in {
  animation: fadeIn 1s ease-out both;
}
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
